name: Terraform CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy


jobs:
  terraform:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./terraform


    steps:
    - name: Checkout code
      uses: actions/checkout@v3


    - name: Setup Terraform
      run: |
        terraform --version
        echo "Terraform is already installed on the runner."


    - name: Terraform Format Check
      run: terraform fmt -check -recursive


    - name: Terraform Init
      run: terraform init


    - name: Terraform Validate
      run: terraform validate


    - name: Terraform Plan
      if: github.event.inputs.action == 'plan' || github.event.inputs.action == '' || github.event_name != 'workflow_dispatch'
      run: terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    - name: Terraform Apply
      if: github.event.inputs.action == 'apply' && github.event_name == 'workflow_dispatch'
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy' && github.event_name == 'workflow_dispatch'
      run: terraform destroy -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
